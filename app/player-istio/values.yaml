# Nom du joueur qui sera déployé
playerName: tristiano

# Configuration de l'image
image:
  repository: hugo08/pong
  tag: 0.0.6
  pullPolicy: IfNotPresent

# Configuration du service
service:
  port: 8080

# Configuration d'Istio
istio:
  inject: false 
  host: joueur-a.local.mesh
  gatewayName: tournament-gateway
  gatewayNamespace: player-demo
  # Activation/désactivation de la route HTTP
  httpRouteEnabled: false
  # Injection de fautes pour tester la résilience
  enableFaultInjection: false
  faultDelayMs: 1500
  faultPercentage: 50
  # Circuit Breaker pour protéger le service
  enableCircuitBreaker: true
  # Metrics endpoint
  metricsEnabled: true
  
# Configuration TLS - Désactivée pour n'utiliser que HTTP
tls:
  enabled: false

# Configuration des ressources
resources:
  limits:
    cpu: 200m
    memory: 256Mi
  requests:
    cpu: 100m
    memory: 128Mi

# Configuration des sondes
probes:
  livenessProbe:
    initialDelaySeconds: 10
    periodSeconds: 10
  readinessProbe:
    initialDelaySeconds: 5
    periodSeconds: 5

# Réplicas
replicaCount: 1

# Configuration du joueur "bribed" (corrompu)
bribedPlayer:
  enabled: false      # Activer/désactiver le joueur corrompu
  replicaCount: 1
  delayMs: 2000       # 2 seconds delay to ensure loss in challenges
  image:
    repository: hugo08/pong  # Même valeur par défaut que l'image principale
    tag: 0.0.7-bribed               # Même valeur par défaut que l'image principale
    pullPolicy: IfNotPresent  # Politique de récupération de l'image

# Configuration de la répartition du trafic
trafficSplit:
  normalWeight: 30    # 30% of traffic to normal player
  bribedWeight: 70    # 70% of traffic to bribed player
